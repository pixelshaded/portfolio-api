package com.alexanderfisher.portfolio.api.hibernate.entities;
// Generated by Hibernate Tools 5.4.17.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * RolesEntity generated by hbm2java
 */
@Entity
@Table(name="roles"
    ,catalog="portfolio"
    , uniqueConstraints = @UniqueConstraint(columnNames="role") 
)
public class RolesEntity  implements java.io.Serializable {


     private Integer id;
     private String name;
     private String role;
     private Set<UsersEntity> usersEntities = new HashSet<UsersEntity>(0);

    public RolesEntity() {
    }

	
    public RolesEntity(String name, String role) {
        this.name = name;
        this.role = role;
    }
    public RolesEntity(String name, String role, Set<UsersEntity> usersEntities) {
       this.name = name;
       this.role = role;
       this.usersEntities = usersEntities;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="name", nullable=false, length=30)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="role", unique=true, nullable=false, length=20)
    public String getRole() {
        return this.role;
    }
    
    public void setRole(String role) {
        this.role = role;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="user_role", catalog="portfolio", joinColumns = { 
        @JoinColumn(name="role_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="user_id", nullable=false, updatable=false) })
    public Set<UsersEntity> getUsersEntities() {
        return this.usersEntities;
    }
    
    public void setUsersEntities(Set<UsersEntity> usersEntities) {
        this.usersEntities = usersEntities;
    }




}


