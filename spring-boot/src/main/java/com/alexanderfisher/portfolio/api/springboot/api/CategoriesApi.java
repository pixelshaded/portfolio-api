/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.alexanderfisher.portfolio.api.springboot.api;

import com.alexanderfisher.portfolio.api.models.Category;
import com.alexanderfisher.portfolio.api.models.Project;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@Validated
@Api(value = "categories", description = "the categories API")
public interface CategoriesApi {

    default CategoriesApiDelegate getDelegate() {
        return new CategoriesApiDelegate() {};
    }

    @ApiOperation(value = "", nickname = "categoriesCategoryIdProjectsGet", notes = "Returns projects for a given category", response = Project.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A list of projects for a given category", response = Project.class, responseContainer = "List") })
    @RequestMapping(value = "/categories/{categoryId}/projects",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Project>> categoriesCategoryIdProjectsGet(@ApiParam(value = "",required=true) @PathVariable("categoryId") Integer categoryId) {
        return getDelegate().categoriesCategoryIdProjectsGet(categoryId);
    }


    @ApiOperation(value = "", nickname = "categoriesGet", notes = "Returns all categories", response = Category.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A list of categories", response = Category.class, responseContainer = "List") })
    @RequestMapping(value = "/categories",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Category>> categoriesGet() {
        return getDelegate().categoriesGet();
    }

}
