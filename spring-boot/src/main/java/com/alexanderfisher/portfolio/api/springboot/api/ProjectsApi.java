/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.alexanderfisher.portfolio.api.springboot.api;

import com.alexanderfisher.portfolio.api.models.Project;
import com.alexanderfisher.portfolio.api.models.ProjectGallery;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@Validated
@Api(value = "projects", description = "the projects API")
public interface ProjectsApi {

    default ProjectsApiDelegate getDelegate() {
        return new ProjectsApiDelegate() {};
    }

    @ApiOperation(value = "", nickname = "getProjectGallery", notes = "Returns project gallery data for a project", response = ProjectGallery.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Project gallery data for a project", response = ProjectGallery.class) })
    @RequestMapping(value = "/projects/{projectId}/gallery",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ProjectGallery> getProjectGallery(@ApiParam(value = "",required=true) @PathVariable("projectId") Integer projectId) {
        return getDelegate().getProjectGallery(projectId);
    }


    @ApiOperation(value = "", nickname = "getProjects", notes = "Returns all projects", response = Project.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A list of projects", response = Project.class, responseContainer = "List") })
    @RequestMapping(value = "/projects",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Project>> getProjects() {
        return getDelegate().getProjects();
    }

}
